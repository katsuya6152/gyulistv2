services:
  postgres:
    image: postgres:15
    container_name: gyulistv2-postgres
    environment:
      POSTGRES_DB: gyulistv2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gyulistv2-network

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: gyulistv2-api
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/gyulistv2"
      PORT: 3001
      NODE_ENV: development
      CORS_ORIGIN: "http://localhost:3000"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gyulistv2-network

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: gyulistv2-web
    environment:
      API_URL: "http://api:3001"
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - gyulistv2-network

volumes:
  postgres_data:

networks:
  gyulistv2-network:
    driver: bridge
